SET SCHEMA "LEARNING_TO_NOTE";

DROP TABLE "PAIRS";
DROP TABLE "OFFSETS";
DROP TABLE "ENTITIES";
DROP TABLE "USER_DOCUMENTS";
DROP TABLE "USERS";
DROP TABLE "DOCUMENTS";


CREATE COLUMN TABLE "DOCUMENTS" (
                "ID" VARCHAR(255) PRIMARY KEY,
                "TEXT" NCLOB
              );

CREATE COLUMN TABLE "USERS" (
    "ID" VARCHAR(255) PRIMARY KEY,
    "NAME" VARCHAR(255),
    "TOKEN" VARCHAR(1024)
);

CREATE COLUMN TABLE "USER_DOCUMENTS" (
    "ID" INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "USER_ID" VARCHAR(255),
    "DOCUMENT_ID" VARCHAR(255),
    "VISIBILITY" TINYINT,
    "CREATED_AT" TIMESTAMP,
    "UPDATED_AT" TIMESTAMP,

    FOREIGN KEY("USER_ID") REFERENCES "USERS" ON DELETE CASCADE,
    FOREIGN KEY("DOCUMENT_ID") REFERENCES "DOCUMENTS" ON DELETE CASCADE
);

CREATE COLUMN TABLE "ENTITIES" (
                "ID" VARCHAR(255) PRIMARY KEY,
                "USER_DOC_ID" INT,
                "TYPE" VARCHAR(255),

                FOREIGN KEY("USER_DOC_ID") REFERENCES "USER_DOCUMENTS" ON DELETE CASCADE
              );

CREATE COLUMN TABLE "OFFSETS" (
                "START" INT,
                "END" INT,
                "ENTITY_ID" VARCHAR(255),

                FOREIGN KEY("ENTITY_ID") REFERENCES "ENTITIES" ON DELETE CASCADE
              );

CREATE COLUMN TABLE "PAIRS" (
                "ID" INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                "E1_ID" VARCHAR(255),
                "E2_ID" VARCHAR(255),
                "DDI" TINYINT,
                "TYPE" VARCHAR(255),

                FOREIGN KEY("E1_ID") REFERENCES "ENTITIES" ON DELETE CASCADE,
                FOREIGN KEY("E2_ID") REFERENCES "ENTITIES" ON DELETE CASCADE
              );


DELETE FROM "PAIRS";
DELETE FROM "OFFSETS";
DELETE FROM "ENTITIES";
DELETE FROM "USER_DOCUMENTS";
DELETE FROM "USERS";
DELETE FROM "DOCUMENTS";
